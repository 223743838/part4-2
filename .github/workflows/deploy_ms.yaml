
name: Deploy microservice

on:

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW  }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      
      # Checks-out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      #
      # Give execute permissions for the build script.
      #
      - name: Permission Build
        run: chmod +x scripts/build-image.sh

      #
      # Builds the Docker image.
      #
      - name: Build
        run: scripts/build-image.sh

      #
      # Give execute permissions for the build script.
      #
      - name: Permission Publish
        run: chmod +x scripts/push-image.sh

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish
        run: scripts/push-image.sh

      # Step 15: Set up kubectl for Kubernetes
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.20.0'

    # Step 16: Get AKS credentials using Service Principal
      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_AKS_NAME }}

      #
      # Give execute permissions for the build script.
      #
      - name: Permission Deploy
        run: chmod +x scripts/deploy.sh

      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy
        run: scripts/deploy.sh
